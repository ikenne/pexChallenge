// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	model "pexChallenge/model"

	mock "github.com/stretchr/testify/mock"
)

// UrlProcessor is an autogenerated mock type for the UrlProcessor type
type UrlProcessor struct {
	mock.Mock
}

// Process provides a mock function with given fields: url
func (_m *UrlProcessor) Process(url string) (*model.ImageResult, error) {
	ret := _m.Called(url)

	var r0 *model.ImageResult
	if rf, ok := ret.Get(0).(func(string) *model.ImageResult); ok {
		r0 = rf(url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ImageResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProcessURLs provides a mock function with given fields: urls
func (_m *UrlProcessor) ProcessURLs(urls []string) ([]model.ImageResult, error) {
	ret := _m.Called(urls)

	var r0 []model.ImageResult
	if rf, ok := ret.Get(0).(func([]string) []model.ImageResult); ok {
		r0 = rf(urls)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.ImageResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(urls)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
